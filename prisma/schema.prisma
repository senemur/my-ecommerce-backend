generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  /// Firebase UID doğrudan burada tutulur.
  id        String    @id
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  orders    Order[]
  cartItems CartItem[]
  favorites Favorite[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  price       Decimal   @db.Decimal(10,2)
  image       String?
  createdAt   DateTime  @default(now())
  orderItems  OrderItem[]
  cartItems   CartItem[]
  favorites   Favorite[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   // <— Int yerine String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1)
  addedAt   DateTime @default(now())
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   // <— Int yerine String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  addedAt   DateTime @default(now())
}

model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    String      // <— Int yerine String
  total     Decimal     @db.Decimal(10,2)
  createdAt DateTime    @default(now())
  items     OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(10,2)
}
